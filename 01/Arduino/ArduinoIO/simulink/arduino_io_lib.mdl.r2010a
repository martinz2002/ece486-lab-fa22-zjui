Library {
  Name			  "arduino_io_lib"
  Version		  7.5
  MdlSubVersion		  0
  SavedCharacterEncoding  "windows-1252"
  LibraryType		  "BlockLibrary"
  SaveDefaultBlockParams  on
  ScopeRefreshTime	  0.035000
  OverrideScopeRefreshTime on
  DisableAllScopes	  off
  MaxMDLFileLineLength	  120
  Created		  "Wed Oct 20 08:57:35 2010"
  Creator		  "gvallabh"
  UpdateHistory		  "UpdateHistoryNever"
  ModifiedByFormat	  "%<Auto>"
  LastModifiedBy	  "gcampa"
  ModifiedDateFormat	  "%<Auto>"
  LastModifiedDate	  "Thu May 29 23:25:59 2014"
  RTWModifiedTimeStamp	  323306575
  ModelVersionFormat	  "1.%<AutoIncrement:85>"
  ConfigurationManager	  "None"
  SampleTimeColors	  off
  SampleTimeAnnotations	  off
  LibraryLinkDisplay	  "none"
  WideLines		  off
  ShowLineDimensions	  off
  ShowPortDataTypes	  off
  ShowLoopsOnError	  on
  IgnoreBidirectionalLines off
  ShowStorageClass	  off
  ShowTestPointIcons	  on
  ShowSignalResolutionIcons on
  ShowViewerIcons	  on
  SortedOrder		  off
  ExecutionContextIcon	  off
  ShowLinearizationAnnotations on
  BlockNameDataTip	  off
  BlockParametersDataTip  off
  BlockDescriptionStringDataTip	off
  ToolBar		  on
  StatusBar		  on
  BrowserShowLibraryLinks off
  BrowserLookUnderMasks	  off
  SimulationMode	  "normal"
  LinearizationMsg	  "none"
  Profile		  off
  ParamWorkspaceSource	  "MATLABWorkspace"
  RecordCoverage	  off
  CovSaveName		  "covdata"
  CovMetricSettings	  "dw"
  CovNameIncrementing	  off
  CovHtmlReporting	  on
  CovForceBlockReductionOff on
  covSaveCumulativeToWorkspaceVar on
  CovSaveSingleToWorkspaceVar on
  CovCumulativeReport	  off
  CovReportOnPause	  on
  CovModelRefEnable	  "Off"
  CovExternalEMLEnable	  off
  ExtModeBatchMode	  off
  ExtModeEnableFloating	  on
  ExtModeTrigType	  "manual"
  ExtModeTrigMode	  "normal"
  ExtModeTrigPort	  "1"
  ExtModeTrigElement	  "any"
  ExtModeTrigDuration	  1000
  ExtModeTrigDurationFloating "auto"
  ExtModeTrigHoldOff	  0
  ExtModeTrigDelay	  0
  ExtModeTrigDirection	  "rising"
  ExtModeTrigLevel	  0
  ExtModeArchiveMode	  "off"
  ExtModeAutoIncOneShot	  off
  ExtModeIncDirWhenArm	  off
  ExtModeAddSuffixToVar	  off
  ExtModeWriteAllDataToWs off
  ExtModeArmWhenConnect	  on
  ExtModeSkipDownloadWhenConnect off
  ExtModeLogAll		  on
  ExtModeAutoUpdateStatusClock on
  ShowModelReferenceBlockVersion off
  ShowModelReferenceBlockIO off
  Array {
    Type		    "Handle"
    Dimension		    1
    Simulink.ConfigSet {
      $ObjectID		      1
      Version		      "1.10.0"
      Array {
	Type			"Handle"
	Dimension		8
	Simulink.SolverCC {
	  $ObjectID		  2
	  Version		  "1.10.0"
	  StartTime		  "0.0"
	  StopTime		  "10.0"
	  AbsTol		  "auto"
	  FixedStep		  "auto"
	  InitialStep		  "auto"
	  MaxNumMinSteps	  "-1"
	  MaxOrder		  5
	  ZcThreshold		  "auto"
	  ConsecutiveZCsStepRelTol "10*128*eps"
	  MaxConsecutiveZCs	  "1000"
	  ExtrapolationOrder	  4
	  NumberNewtonIterations  1
	  MaxStep		  "auto"
	  MinStep		  "auto"
	  MaxConsecutiveMinStep	  "1"
	  RelTol		  "1e-3"
	  SolverMode		  "SingleTasking"
	  Solver		  "ode45"
	  SolverName		  "ode45"
	  SolverJacobianMethodControl "auto"
	  ShapePreserveControl	  "DisableAll"
	  ZeroCrossControl	  "UseLocalSettings"
	  ZeroCrossAlgorithm	  "Nonadaptive"
	  AlgebraicLoopSolver	  "TrustRegion"
	  SolverResetMethod	  "Fast"
	  PositivePriorityOrder	  off
	  AutoInsertRateTranBlk	  off
	  SampleTimeConstraint	  "Unconstrained"
	  InsertRTBMode		  "Whenever possible"
	}
	Simulink.DataIOCC {
	  $ObjectID		  3
	  Version		  "1.10.0"
	  Decimation		  "1"
	  ExternalInput		  "[t, u]"
	  FinalStateName	  "xFinal"
	  InitialState		  "xInitial"
	  LimitDataPoints	  on
	  MaxDataPoints		  "1000"
	  LoadExternalInput	  off
	  LoadInitialState	  off
	  SaveFinalState	  off
	  SaveCompleteFinalSimState off
	  SaveFormat		  "Array"
	  SaveOutput		  on
	  SaveState		  off
	  SignalLogging		  on
	  DSMLogging		  on
	  InspectSignalLogs	  off
	  SaveTime		  on
	  ReturnWorkspaceOutputs  off
	  StateSaveName		  "xout"
	  TimeSaveName		  "tout"
	  OutputSaveName	  "yout"
	  SignalLoggingName	  "logsout"
	  DSMLoggingName	  "dsmout"
	  OutputOption		  "RefineOutputTimes"
	  OutputTimes		  "[]"
	  ReturnWorkspaceOutputsName "out"
	  Refine		  "1"
	}
	Simulink.OptimizationCC {
	  $ObjectID		  4
	  Version		  "1.10.0"
	  Array {
	    Type		    "Cell"
	    Dimension		    7
	    Cell		    "BooleansAsBitfields"
	    Cell		    "PassReuseOutputArgsAs"
	    Cell		    "PassReuseOutputArgsThreshold"
	    Cell		    "ZeroExternalMemoryAtStartup"
	    Cell		    "ZeroInternalMemoryAtStartup"
	    Cell		    "OptimizeModelRefInitCode"
	    Cell		    "NoFixptDivByZeroProtection"
	    PropName		    "DisabledProps"
	  }
	  BlockReduction	  off
	  BooleanDataType	  off
	  ConditionallyExecuteInputs on
	  InlineParams		  off
	  UseIntDivNetSlope	  off
	  InlineInvariantSignals  off
	  OptimizeBlockIOStorage  on
	  BufferReuse		  on
	  EnhancedBackFolding	  off
	  StrengthReduction	  off
	  EnforceIntegerDowncast  on
	  ExpressionFolding	  on
	  BooleansAsBitfields	  off
	  BitfieldContainerType	  "uint_T"
	  EnableMemcpy		  on
	  MemcpyThreshold	  64
	  PassReuseOutputArgsAs	  "Structure reference"
	  ExpressionDepthLimit	  2147483647
	  FoldNonRolledExpr	  on
	  LocalBlockOutputs	  on
	  RollThreshold		  5
	  SystemCodeInlineAuto	  off
	  StateBitsets		  off
	  DataBitsets		  off
	  UseTempVars		  off
	  ZeroExternalMemoryAtStartup on
	  ZeroInternalMemoryAtStartup on
	  InitFltsAndDblsToZero	  off
	  NoFixptDivByZeroProtection off
	  EfficientFloat2IntCast  off
	  EfficientMapNaN2IntZero on
	  OptimizeModelRefInitCode off
	  LifeSpan		  "inf"
	  MaxStackSize		  "Inherit from target"
	  BufferReusableBoundary  on
	  SimCompilerOptimization "Off"
	  AccelVerboseBuild	  off
	}
	Simulink.DebuggingCC {
	  $ObjectID		  5
	  Version		  "1.10.0"
	  RTPrefix		  "error"
	  ConsistencyChecking	  "none"
	  ArrayBoundsChecking	  "none"
	  SignalInfNanChecking	  "none"
	  SignalRangeChecking	  "none"
	  ReadBeforeWriteMsg	  "UseLocalSettings"
	  WriteAfterWriteMsg	  "UseLocalSettings"
	  WriteAfterReadMsg	  "UseLocalSettings"
	  AlgebraicLoopMsg	  "warning"
	  ArtificialAlgebraicLoopMsg "warning"
	  SaveWithDisabledLinksMsg "warning"
	  SaveWithParameterizedLinksMsg	"none"
	  CheckSSInitialOutputMsg on
	  UnderspecifiedInitializationDetection	"Classic"
	  MergeDetectMultiDrivingBlocksExec "none"
	  CheckExecutionContextPreStartOutputMsg off
	  CheckExecutionContextRuntimeOutputMsg	off
	  SignalResolutionControl "TryResolveAllWithWarning"
	  BlockPriorityViolationMsg "warning"
	  MinStepSizeMsg	  "warning"
	  TimeAdjustmentMsg	  "none"
	  MaxConsecutiveZCsMsg	  "error"
	  SolverPrmCheckMsg	  "none"
	  InheritedTsInSrcMsg	  "warning"
	  DiscreteInheritContinuousMsg "warning"
	  MultiTaskDSMMsg	  "error"
	  MultiTaskCondExecSysMsg "error"
	  MultiTaskRateTransMsg	  "error"
	  SingleTaskRateTransMsg  "none"
	  TasksWithSamePriorityMsg "warning"
	  SigSpecEnsureSampleTimeMsg "warning"
	  CheckMatrixSingularityMsg "none"
	  IntegerOverflowMsg	  "warning"
	  Int32ToFloatConvMsg	  "warning"
	  ParameterDowncastMsg	  "error"
	  ParameterOverflowMsg	  "error"
	  ParameterUnderflowMsg	  "none"
	  ParameterPrecisionLossMsg "warning"
	  ParameterTunabilityLossMsg "warning"
	  FixptConstUnderflowMsg  "none"
	  FixptConstOverflowMsg	  "none"
	  FixptConstPrecisionLossMsg "none"
	  UnderSpecifiedDataTypeMsg "none"
	  UnnecessaryDatatypeConvMsg "none"
	  VectorMatrixConversionMsg "none"
	  InvalidFcnCallConnMsg	  "error"
	  FcnCallInpInsideContextMsg "Use local settings"
	  SignalLabelMismatchMsg  "none"
	  UnconnectedInputMsg	  "warning"
	  UnconnectedOutputMsg	  "warning"
	  UnconnectedLineMsg	  "warning"
	  SFcnCompatibilityMsg	  "none"
	  UniqueDataStoreMsg	  "none"
	  BusObjectLabelMismatch  "warning"
	  RootOutportRequireBusObject "warning"
	  AssertControl		  "UseLocalSettings"
	  EnableOverflowDetection off
	  ModelReferenceIOMsg	  "none"
	  ModelReferenceVersionMismatchMessage "none"
	  ModelReferenceIOMismatchMessage "none"
	  ModelReferenceCSMismatchMessage "none"
	  UnknownTsInhSupMsg	  "warning"
	  ModelReferenceDataLoggingMessage "warning"
	  ModelReferenceSymbolNameMessage "warning"
	  ModelReferenceExtraNoncontSigs "error"
	  StateNameClashWarn	  "warning"
	  SimStateInterfaceChecksumMismatchMsg "warning"
	  StrictBusMsg		  "Warning"
	  BusNameAdapt		  "WarnAndRepair"
	  NonBusSignalsTreatedAsBus "none"
	  LoggingUnavailableSignals "error"
	  BlockIODiagnostic	  "none"
	}
	Simulink.HardwareCC {
	  $ObjectID		  6
	  Version		  "1.10.0"
	  ProdBitPerChar	  8
	  ProdBitPerShort	  16
	  ProdBitPerInt		  32
	  ProdBitPerLong	  32
	  ProdIntDivRoundTo	  "Undefined"
	  ProdEndianess		  "Unspecified"
	  ProdWordSize		  32
	  ProdShiftRightIntArith  on
	  ProdHWDeviceType	  "32-bit Generic"
	  TargetBitPerChar	  8
	  TargetBitPerShort	  16
	  TargetBitPerInt	  32
	  TargetBitPerLong	  32
	  TargetShiftRightIntArith on
	  TargetIntDivRoundTo	  "Undefined"
	  TargetEndianess	  "Unspecified"
	  TargetWordSize	  32
	  TargetTypeEmulationWarnSuppressLevel 0
	  TargetPreprocMaxBitsSint 32
	  TargetPreprocMaxBitsUint 32
	  TargetHWDeviceType	  "Specified"
	  TargetUnknown		  on
	  ProdEqTarget		  on
	}
	Simulink.ModelReferenceCC {
	  $ObjectID		  7
	  Version		  "1.10.0"
	  UpdateModelReferenceTargets "IfOutOfDateOrStructuralChange"
	  CheckModelReferenceTargetMessage "error"
	  EnableParallelModelReferenceBuilds off
	  ParallelModelReferenceMATLABWorkerInit "None"
	  ModelReferenceNumInstancesAllowed "Multi"
	  PropagateVarSize	  "Infer from blocks in model"
	  ModelReferencePassRootInputsByReference on
	  ModelReferenceMinAlgLoopOccurrences off
	  PropagateSignalLabelsOutOfModel off
	  SupportModelReferenceSimTargetCustomCode off
	}
	Simulink.SFSimCC {
	  $ObjectID		  8
	  Version		  "1.10.0"
	  SFSimEnableDebug	  on
	  SFSimOverflowDetection  on
	  SFSimEcho		  on
	  SimBlas		  on
	  SimCtrlC		  on
	  SimExtrinsic		  on
	  SimIntegrity		  on
	  SimUseLocalCustomCode	  off
	  SimBuildMode		  "sf_incremental_build"
	}
	Simulink.RTWCC {
	  $BackupClass		  "Simulink.RTWCC"
	  $ObjectID		  9
	  Version		  "1.10.0"
	  Array {
	    Type		    "Cell"
	    Dimension		    6
	    Cell		    "IncludeHyperlinkInReport"
	    Cell		    "GenerateTraceInfo"
	    Cell		    "GenerateTraceReport"
	    Cell		    "GenerateTraceReportSl"
	    Cell		    "GenerateTraceReportSf"
	    Cell		    "GenerateTraceReportEml"
	    PropName		    "DisabledProps"
	  }
	  SystemTargetFile	  "grt.tlc"
	  GenCodeOnly		  off
	  MakeCommand		  "make_rtw"
	  GenerateMakefile	  on
	  TemplateMakefile	  "grt_default_tmf"
	  GenerateReport	  off
	  SaveLog		  off
	  RTWVerbose		  on
	  RetainRTWFile		  off
	  ProfileTLC		  off
	  TLCDebug		  off
	  TLCCoverage		  off
	  TLCAssert		  off
	  ProcessScriptMode	  "Default"
	  ConfigurationMode	  "Optimized"
	  ConfigAtBuild		  off
	  RTWUseLocalCustomCode	  off
	  RTWUseSimCustomCode	  off
	  IncludeHyperlinkInReport off
	  LaunchReport		  off
	  TargetLang		  "C"
	  IncludeBusHierarchyInRTWFileBlockHierarchyMap	off
	  IncludeERTFirstTime	  off
	  GenerateTraceInfo	  off
	  GenerateTraceReport	  off
	  GenerateTraceReportSl	  off
	  GenerateTraceReportSf	  off
	  GenerateTraceReportEml  off
	  GenerateCodeInfo	  off
	  RTWCompilerOptimization "Off"
	  CheckMdlBeforeBuild	  "Off"
	  CustomRebuildMode	  "OnUpdate"
	  Array {
	    Type		    "Handle"
	    Dimension		    2
	    Simulink.CodeAppCC {
	      $ObjectID		      10
	      Version		      "1.10.0"
	      Array {
		Type			"Cell"
		Dimension		19
		Cell			"IgnoreCustomStorageClasses"
		Cell			"IgnoreTestpoints"
		Cell			"InsertBlockDesc"
		Cell			"SFDataObjDesc"
		Cell			"SimulinkDataObjDesc"
		Cell			"DefineNamingRule"
		Cell			"SignalNamingRule"
		Cell			"ParamNamingRule"
		Cell			"InlinedPrmAccess"
		Cell			"CustomSymbolStr"
		Cell			"CustomSymbolStrGlobalVar"
		Cell			"CustomSymbolStrType"
		Cell			"CustomSymbolStrField"
		Cell			"CustomSymbolStrFcn"
		Cell			"CustomSymbolStrFcnArg"
		Cell			"CustomSymbolStrBlkIO"
		Cell			"CustomSymbolStrTmpVar"
		Cell			"CustomSymbolStrMacro"
		Cell			"ReqsInCode"
		PropName		"DisabledProps"
	      }
	      ForceParamTrailComments off
	      GenerateComments	      on
	      IgnoreCustomStorageClasses on
	      IgnoreTestpoints	      off
	      IncHierarchyInIds	      off
	      MaxIdLength	      31
	      PreserveName	      off
	      PreserveNameWithParent  off
	      ShowEliminatedStatement off
	      IncAutoGenComments      off
	      SimulinkDataObjDesc     off
	      SFDataObjDesc	      off
	      IncDataTypeInIds	      off
	      MangleLength	      1
	      CustomSymbolStrGlobalVar "$R$N$M"
	      CustomSymbolStrType     "$N$R$M"
	      CustomSymbolStrField    "$N$M"
	      CustomSymbolStrFcn      "$R$N$M$F"
	      CustomSymbolStrFcnArg   "rt$I$N$M"
	      CustomSymbolStrBlkIO    "rtb_$N$M"
	      CustomSymbolStrTmpVar   "$N$M"
	      CustomSymbolStrMacro    "$R$N$M"
	      DefineNamingRule	      "None"
	      ParamNamingRule	      "None"
	      SignalNamingRule	      "None"
	      InsertBlockDesc	      off
	      SimulinkBlockComments   on
	      EnableCustomComments    off
	      InlinedPrmAccess	      "Literals"
	      ReqsInCode	      off
	      UseSimReservedNames     off
	    }
	    Simulink.GRTTargetCC {
	      $BackupClass	      "Simulink.TargetCC"
	      $ObjectID		      11
	      Version		      "1.10.0"
	      Array {
		Type			"Cell"
		Dimension		17
		Cell			"GeneratePreprocessorConditionals"
		Cell			"IncludeMdlTerminateFcn"
		Cell			"CombineOutputUpdateFcns"
		Cell			"SuppressErrorStatus"
		Cell			"ERTCustomFileBanners"
		Cell			"GenerateSampleERTMain"
		Cell			"GenerateTestInterfaces"
		Cell			"ModelStepFunctionPrototypeControlCompliant"
		Cell			"CPPClassGenCompliant"
		Cell			"MultiInstanceERTCode"
		Cell			"PurelyIntegerCode"
		Cell			"SupportNonFinite"
		Cell			"SupportComplex"
		Cell			"SupportAbsoluteTime"
		Cell			"SupportContinuousTime"
		Cell			"SupportNonInlinedSFcns"
		Cell			"PortableWordSizes"
		PropName		"DisabledProps"
	      }
	      TargetFcnLib	      "ansi_tfl_table_tmw.mat"
	      TargetLibSuffix	      ""
	      TargetPreCompLibLocation ""
	      TargetFunctionLibrary   "ANSI_C"
	      UtilityFuncGeneration   "Auto"
	      ERTMultiwordTypeDef     "System defined"
	      ERTCodeCoverageTool     "None"
	      ERTMultiwordLength      256
	      MultiwordLength	      2048
	      GenerateFullHeader      on
	      GenerateSampleERTMain   off
	      GenerateTestInterfaces  off
	      IsPILTarget	      off
	      ModelReferenceCompliant on
	      ParMdlRefBuildCompliant on
	      CompOptLevelCompliant   on
	      IncludeMdlTerminateFcn  on
	      GeneratePreprocessorConditionals "Disable all"
	      CombineOutputUpdateFcns off
	      SuppressErrorStatus     off
	      ERTFirstTimeCompliant   off
	      IncludeFileDelimiter    "Auto"
	      ERTCustomFileBanners    off
	      SupportAbsoluteTime     on
	      LogVarNameModifier      "rt_"
	      MatFileLogging	      on
	      MultiInstanceERTCode    off
	      SupportNonFinite	      on
	      SupportComplex	      on
	      PurelyIntegerCode	      off
	      SupportContinuousTime   on
	      SupportNonInlinedSFcns  on
	      SupportVariableSizeSignals off
	      EnableShiftOperators    on
	      ParenthesesLevel	      "Nominal"
	      PortableWordSizes	      off
	      ModelStepFunctionPrototypeControlCompliant off
	      CPPClassGenCompliant    off
	      AutosarCompliant	      off
	      UseMalloc		      off
	      ExtMode		      off
	      ExtModeStaticAlloc      off
	      ExtModeTesting	      off
	      ExtModeStaticAllocSize  1000000
	      ExtModeTransport	      0
	      ExtModeMexFile	      "ext_comm"
	      ExtModeIntrfLevel	      "Level1"
	      RTWCAPISignals	      off
	      RTWCAPIParams	      off
	      RTWCAPIStates	      off
	      GenerateASAP2	      off
	    }
	    PropName		    "Components"
	  }
	}
	PropName		"Components"
      }
      Name		      "Configuration"
      CurrentDlgPage	      "Solver"
      ConfigPrmDlgPosition    " [ 242, 69, 1122, 699 ] "
    }
    PropName		    "ConfigurationSets"
  }
  BlockDefaults {
    ForegroundColor	    "black"
    BackgroundColor	    "white"
    DropShadow		    off
    NamePlacement	    "normal"
    FontName		    "Helvetica"
    FontSize		    10
    FontWeight		    "normal"
    FontAngle		    "normal"
    ShowName		    on
    BlockRotation	    0
    BlockMirror		    off
  }
  AnnotationDefaults {
    HorizontalAlignment	    "center"
    VerticalAlignment	    "middle"
    ForegroundColor	    "black"
    BackgroundColor	    "white"
    DropShadow		    off
    FontName		    "Helvetica"
    FontSize		    10
    FontWeight		    "normal"
    FontAngle		    "normal"
    UseDisplayTextAsClickCallback off
  }
  LineDefaults {
    FontName		    "Helvetica"
    FontSize		    9
    FontWeight		    "normal"
    FontAngle		    "normal"
  }
  BlockParameterDefaults {
    Block {
      BlockType		      "M-S-Function"
      FunctionName	      "mlfile"
      DisplayMFileStacktrace  on
    }
    Block {
      BlockType		      SubSystem
      ShowPortLabels	      "FromPortIcon"
      Permissions	      "ReadWrite"
      PermitHierarchicalResolution "All"
      TreatAsAtomicUnit	      off
      CheckFcnCallInpInsideContextMsg off
      SystemSampleTime	      "-1"
      RTWFcnNameOpts	      "Auto"
      RTWFileNameOpts	      "Auto"
      RTWMemSecFuncInitTerm   "Inherit from model"
      RTWMemSecFuncExecute    "Inherit from model"
      RTWMemSecDataConstants  "Inherit from model"
      RTWMemSecDataInternal   "Inherit from model"
      RTWMemSecDataParameters "Inherit from model"
      SimViewingDevice	      off
      DataTypeOverride	      "UseLocalSettings"
      MinMaxOverflowLogging   "UseLocalSettings"
    }
  }
  System {
    Name		    "arduino_io_lib"
    Location		    [19, 89, 830, 637]
    Open		    on
    ModelBrowserVisibility  off
    ModelBrowserWidth	    200
    ScreenColor		    "white"
    PaperOrientation	    "landscape"
    PaperPositionMode	    "auto"
    PaperType		    "usletter"
    PaperUnits		    "inches"
    TiledPaperMargins	    [0.500000, 0.500000, 0.500000, 0.500000]
    TiledPageScale	    1
    ShowPageBoundaries	    off
    ZoomFactor		    "100"
    ReportName		    "simulink-default.rpt"
    SIDHighWatermark	    19
    Block {
      BlockType		      "M-S-Function"
      Name		      "Arduino Analog Read"
      SID		      1
      Ports		      [0, 1]
      Position		      [235, 141, 335, 199]
      FunctionName	      "msfun_arduino_analogread"
      Parameters	      "arduinoVar, arduinoPin, T"
      MaskType		      "Arduino IO Analog Read"
      MaskDescription	      "Every time this block is executed it asks the server program running on the Arduino to pe"
      "rform an analog input on (that is read the voltage from) a given pin, and to return the value (0 to 1023) via se"
      "rial port. This value is then set as the output of the block.\n\nThe first parameter in the mask is the name of "
      "the Arduino object (which must match the one chosen in the Setup block). The second parameter is the number of t"
      "he analog input pin (0 to 5) where the analog input needs to be performed. The last parameter is the sample time"
      ".\n\nSee the help for more details."
      MaskHelp		      "Every time this block is executed it asks the server program running on the Arduino to perform "
      "an analog input on (that is read the voltage from) a given pin, and to return the value (0 to 1023) via serial p"
      "ort. This value is then set as the output of the block.\n\nThe first parameter in the mask is the name of the Ar"
      "duino object (which must match the one chosen in the Setup block). The second parameter is the number of the ana"
      "log input pin (0 to 5) where the analog input needs to be performed.\n\nNote that the analog input pins 0 to 5 a"
      "re also known as digital pins from 14 to 19, and are located on the lower right corner of the board. Specificall"
      "y, analog input pin 0 corresponds to digital pin 14, and analog input pin 5 corresponds to digital pin 19. Perfo"
      "rming analog input does   not affect the digital state (high, low, digital input) of the pin. The last parameter"
      " is the sample time.\n\nThe returned value, ranges from 0 to 1023, with 0 corresponding to an input voltage of 0"
      " volts, and 1023 to a reference value that is typically 5 volts (this voltage can be set up by the analogReferen"
      "ce function). Therefore, assuming a range from 0 to 5 V the resolution is .0049 volts (4.9 mV) per unit.\n\nThe "
      "corresponding ArduinoIO method is \"analogRead\", so you can type \"doc arduino.analogRead\" or \"help arduino.a"
      "nalogRead\" for more details."
      MaskPromptString	      "Arduino Variable|Pin|Sample Time (-1 for inherited):"
      MaskStyleString	      "popup(Temporary arduino variable: Arduino1|Temporary arduino variable: Arduino2|Temporary"
      " arduino variable: Arduino3|Temporary arduino variable: Arduino4|Existing workspace arduino variable #1|Existing"
      " workspace arduino variable #2|Existing workspace arduino variable #3|Existing workspace arduino variable #4),ed"
      "it,edit"
      MaskTunableValueString  "off,off,off"
      MaskCallbackString      "||"
      MaskEnableString	      "on,on,on"
      MaskVisibilityString    "on,on,on"
      MaskToolTipString	      "on,on,on"
      MaskVariables	      "arduinoVar=&1;arduinoPin=@2;T=@3;"
      MaskDisplay	      "if ~isempty(strfind(arduinoVar,'Existing')),\n    try\n        SetupBlockName = find_system(b"
      "droot(gcb),'SearchDepth', 1, 'MaskType', 'Arduino IO Setup', 'arduinoVar', arduinoVar);\n        str=get_param(S"
      "etupBlockName,'workspaceVarName');\n        fprintf('%s\\nAnalog Read\\nPin %s',str{1},num2str(arduinoPin));\n  "
      "  catch\n        fprintf('Workspace var #%s\\nAnalog Read\\nPin %s',arduinoVar(end),num2str(arduinoPin))\n    en"
      "d\nelse\n    fprintf('%s\\nAnalog Read\\nPin %s',arduinoVar(end-7:end),num2str(arduinoPin))\nend\ncolor('gray')\n"
      "plot(0:0.02:1, 0.5+(sin([0:0.02:1]*2*pi)/2))\n\n\n\n\n"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskPortRotate	      "default"
      MaskIconUnits	      "normalized"
      MaskValueString	      "Temporary arduino variable: Arduino1|0|0.2"
    }
    Block {
      BlockType		      "M-S-Function"
      Name		      "Arduino Analog Write"
      SID		      2
      Ports		      [1]
      Position		      [515, 141, 615, 199]
      FunctionName	      "msfun_arduino_analogwrite"
      Parameters	      "arduinoVar, arduinoPin, T"
      MaskType		      "Arduino IO analog Write (PWM)"
      MaskDescription	      "Every time this block is executed it gets the value (0 to 255) at its input and sends to "
      "the server program running on the Arduino a command to set that value as the analog (PWM) output of a given pin."
      "\n\nThe first parameter in the mask is the name of the Arduino object (which must match the one chosen in the Se"
      "tup block). The second parameter is the number of the pin (3,5,6,9,10,11) where the analog output needs to be pe"
      "rformed. The last parameter is the sample time.\n\nSee the help for more details."
      MaskHelp		      "Every time this block is executed it gets the value (0 to 255) at its input and sends to the se"
      "rver program running on the Arduino a command to set that value as the analog (PWM) output of a given pin.\n\nTh"
      "e first parameter in the mask is the name of the Arduino object (which must match the one chosen in the Setup bl"
      "ock). The second parameter is the number of the pin (3,5,6,9,10,11) where the analog output needs to be performe"
      "d. The last parameter is the sample time.\n\nNote that the digital pins from 0 to 13 are located on the upper ri"
      "ght part of the board. \n\nThe corresponding ArduinoIO method is \"analogWrite\", so you can type \"doc arduino."
      "analogWrite\" or \"help arduino.analogWrite\" for more details."
      MaskPromptString	      "Arduino Variable|Pin|Sample Time (-1 for inherited)"
      MaskStyleString	      "popup(Temporary arduino variable: Arduino1|Temporary arduino variable: Arduino2|Temporary"
      " arduino variable: Arduino3|Temporary arduino variable: Arduino4|Existing workspace arduino variable #1|Existing"
      " workspace arduino variable #2|Existing workspace arduino variable #3|Existing workspace arduino variable #4),ed"
      "it,edit"
      MaskTunableValueString  "off,off,off"
      MaskCallbackString      "||"
      MaskEnableString	      "on,on,on"
      MaskVisibilityString    "on,on,on"
      MaskToolTipString	      "on,on,on"
      MaskVariables	      "arduinoVar=&1;arduinoPin=@2;T=@3;"
      MaskDisplay	      "patch(0:0.05:1, 0.5+(sin([0:0.05:1]*2*pi)/2), [0.8 0.8 0.8])\nif ~isempty(strfind(arduinoVar,"
      "'Existing')),\n    try\n        SetupBlockName = find_system(bdroot(gcb),'SearchDepth', 1, 'MaskType', 'Arduino "
      "IO Setup', 'arduinoVar', arduinoVar);\n        str=get_param(SetupBlockName,'workspaceVarName');\n        fprint"
      "f('%s\\nAnalog Write\\nPin %s',str{1},num2str(arduinoPin));\n    catch\n        fprintf('Workspace var #%s\\nAna"
      "log Write\\nPin %s',arduinoVar(end),num2str(arduinoPin))\n    end\nelse\n    fprintf('%s\\nAnalog Write\\nPin %s"
      "',arduinoVar(end-7:end),num2str(arduinoPin))\nend\n\n"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskPortRotate	      "default"
      MaskIconUnits	      "normalized"
      MaskValueString	      "Temporary arduino variable: Arduino1|3|0.2"
    }
    Block {
      BlockType		      "M-S-Function"
      Name		      "Arduino Digital Read"
      SID		      3
      Ports		      [0, 1]
      Position		      [105, 141, 205, 199]
      FunctionName	      "msfun_arduino_digitalread"
      Parameters	      "arduinoVar, arduinoPin, T"
      MaskType		      "Arduino IO digital read"
      MaskDescription	      "Every time this block is executed it asks the server program running on the Arduino to pe"
      "rform a digital input on (that is read a high or low voltage value from) a given pin, and to return the value (0"
      " or 1) via serial port. This value is then set as the output of the block.\n\nThe first parameter in the mask is"
      " the name of the Arduino object (which must match the one chosen in the Setup block). The second parameter is th"
      "e number of the pin (2 to 13) where the digital input needs to be performed. The last parameter is the sample ti"
      "me.\n\nSee the help for more details."
      MaskHelp		      "Every time this block is executed it asks the server program running on the Arduino to perform "
      "a digital input on (that is read a high or low voltage value from) a given pin, and to return the value (0 tor 1"
      ") via serial port. This value is then set as the output of the block.\n\nThe first parameter in the mask is the "
      "name of the Arduino object (which must match the one chosen in the Setup block). The second parameter is the num"
      "ber of the pin (2 to 13) where the digital input needs to be performed. The last parameter is the sample time.\n"
      "\nNote that the digital pins from 0 to 13 are located on the upper right part of the board, while the digital pi"
      "ns from 14 to 19 are better known as \"analog input\" pins and are located in the lower right corner of the boar"
      "d.\n\nThe corresponding ArduinoIO method is \"digitalRead\", so you can type \"doc arduino.digitalRead\" or \"he"
      "lp arduino.digitalRead\" for more details."
      MaskPromptString	      "Arduino Variable|Pin|Sample Time (-1 for inherited)"
      MaskStyleString	      "popup(Temporary arduino variable: Arduino1|Temporary arduino variable: Arduino2|Temporary"
      " arduino variable: Arduino3|Temporary arduino variable: Arduino4|Existing workspace arduino variable #1|Existing"
      " workspace arduino variable #2|Existing workspace arduino variable #3|Existing workspace arduino variable #4),ed"
      "it,edit"
      MaskTunableValueString  "off,off,off"
      MaskCallbackString      "||"
      MaskEnableString	      "on,on,on"
      MaskVisibilityString    "on,on,on"
      MaskToolTipString	      "on,on,on"
      MaskVariables	      "arduinoVar=&1;arduinoPin=@2;T=@3;"
      MaskDisplay	      "if ~isempty(strfind(arduinoVar,'Existing')),\n    try\n        SetupBlockName = find_system(b"
      "droot(gcb),'SearchDepth', 1, 'MaskType', 'Arduino IO Setup', 'arduinoVar', arduinoVar);\n        str=get_param(S"
      "etupBlockName,'workspaceVarName');\n        fprintf('%s\\nDigital Read\\nPin %s',str{1},num2str(arduinoPin));\n "
      "   catch\n        fprintf('Workspace var #%s\\nDigital Read\\nPin %s',arduinoVar(end),num2str(arduinoPin))\n    "
      "end\nelse\n    fprintf('%s\\nDigital Read\\nPin %s',arduinoVar(end-7:end),num2str(arduinoPin))\nend\ncolor('gray"
      "')\nplot([0 0.25 0.25 0.5 0.5 0.75], [0 0 0.9 0.9 0 0])\n\n\n\n\n"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskPortRotate	      "default"
      MaskIconUnits	      "normalized"
      MaskValueString	      "Temporary arduino variable: Arduino1|2|0.2"
    }
    Block {
      BlockType		      "M-S-Function"
      Name		      "Arduino Digital Write"
      SID		      4
      Ports		      [1]
      Position		      [385, 141, 485, 199]
      FunctionName	      "msfun_arduino_digitalwrite"
      Parameters	      "arduinoVar, arduinoPin, T"
      MaskType		      "Arduino IO digital Write"
      MaskDescription	      "Every time this block is executed it gets the value (0 or 1) at its input and sends to th"
      "e server program running on the Arduino a command to set that value as the digital output of a given pin.\n\nThe"
      " first parameter in the mask is the name of the Arduino object (which must match the one chosen in the Setup blo"
      "ck). The second parameter is the number of the pin (2 to 13) where the digital output needs to be performed. The"
      " last parameter is the sample time.\n\nSee the help for more details."
      MaskHelp		      "Every time this block is executed it gets the value (0 or 1) at its input and sends to the serv"
      "er program running on the Arduino a command to set that value as the digital output of a given pin.\n\nThe first"
      " parameter in the mask is the name of the Arduino object (which must match the one chosen in the Setup block). T"
      "he second parameter is the number of the pin (2 to 13) where the digital output needs to be performed. The last "
      "parameter is the sample time.\n\nNote that the digital pins from 0 to 13 are located on the upper right part of "
      "the board, while the digital pins from 14 to 19 are better known as \"analog input\" pins and are located in the"
      " lower right corner of the board.\n\nThe corresponding ArduinoIO method is \"digitalWrite\", so you can type \"d"
      "oc arduino.digitalWrite\" or \"help arduino.digitalWrite\" for more details."
      MaskPromptString	      "Arduino Variable|Pin|Sample Time (-1 for inherited)"
      MaskStyleString	      "popup(Temporary arduino variable: Arduino1|Temporary arduino variable: Arduino2|Temporary"
      " arduino variable: Arduino3|Temporary arduino variable: Arduino4|Existing workspace arduino variable #1|Existing"
      " workspace arduino variable #2|Existing workspace arduino variable #3|Existing workspace arduino variable #4),ed"
      "it,edit"
      MaskTunableValueString  "off,off,off"
      MaskCallbackString      "||"
      MaskEnableString	      "on,on,on"
      MaskVisibilityString    "on,on,on"
      MaskToolTipString	      "on,on,on"
      MaskVariables	      "arduinoVar=&1;arduinoPin=@2;T=@3;"
      MaskDisplay	      "patch([0 0.25 0.25 0.5 0.5 0.75], [0 0 0.9 0.9 0 0], [0.8 0.8 0.8])\nif ~isempty(strfind(ardu"
      "inoVar,'Existing')),\n    try\n        SetupBlockName = find_system(bdroot(gcb),'SearchDepth', 1, 'MaskType', 'A"
      "rduino IO Setup', 'arduinoVar', arduinoVar);\n        str=get_param(SetupBlockName,'workspaceVarName');\n       "
      " fprintf('%s\\nDigital Write\\nPin %s',str{1},num2str(arduinoPin));\n    catch\n        fprintf('Workspace var #"
      "%s\\nDigital Write\\nPin %s',arduinoVar(end),num2str(arduinoPin))\n    end\nelse\n    fprintf('%s\\nDigital Writ"
      "e\\nPin %s',arduinoVar(end-7:end),num2str(arduinoPin))\nend\n"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskPortRotate	      "default"
      MaskIconUnits	      "normalized"
      MaskValueString	      "Temporary arduino variable: Arduino1|4|0.2"
    }
    Block {
      BlockType		      "M-S-Function"
      Name		      "Arduino IO Setup"
      SID		      5
      Ports		      []
      Position		      [105, 49, 207, 106]
      Priority		      "3"
      FunctionName	      "msfun_arduino_io_setup"
      Parameters	      "arduinoVar, comPort, workspaceVarName"
      MaskType		      "Arduino IO Setup"
      MaskDescription	      "If a \"Temporary arduino variable\" (one of the first four entries, Arduino1 to Arduino4)"
      " is selected as a first mask parameter, then the block instantiates an arduino object before the simulation star"
      "ts, using the serial port provided by the second mask parameter (e.g. 'COM5' or 'COM8' on Windows, '/dev/ttyS101"
      "' on Unix, or 'DEMO' for demo mode). \nThe object is then used by the other Arduino IO blocks in the Simulink mo"
      "del that specify the same variable name, and is deleted at the end of the simulation. In this case, make sure th"
      "at the port is not already used by the IDE or by MATLAB (e.g. by a valid arduino object in the workspace), so th"
      "at Simulink can use the serial connection.\n\nIf an \"Existing workspace arduino variable\" is instead selected "
      "as a first mask parameter (one of the last four entries), then a preexisitng arduino object (whose name is selec"
      "ted by the second mask parameter) is used in the simulation by the other blocks that specify the same name. The "
      "object will continue to be available in the workspace after the end of the simulation."
      MaskHelp		      "If a \"Temporary arduino variable\" (one of the first four entries, Arduino1 to Arduino4) is se"
      "lected as a first mask parameter, then the block instantiates an arduino object before the simulation starts, us"
      "ing the serial port provided by the second mask parameter (e.g. 'COM5' or 'COM8' on Windows, '/dev/ttyS101' on U"
      "nix, or 'DEMO' for demo mode). \nThe object is then used by the other Arduino IO blocks in the Simulink model th"
      "at specify the same variable name, and is deleted at the end of the simulation.\nIn this case, make sure that th"
      "e port is not already used by the IDE or by MATLAB (e.g. by a valid arduino object in the workspace), so that Si"
      "mulink can use the serial connection.\n<p>\nIf an \"Existing workspace arduino variable\" is instead selected as"
      " a first mask parameter (one of the last four entries), then a preexisitng arduino object (whose name is selecte"
      "d by the second mask parameter) is used in the simulation by the other blocks that specify the same name. The ob"
      "ject will continue to be available in the workspace after the end of the simulation.\n<p>\nIn any case, if you h"
      "ave multiple Arduino boards connected to your computer, you must use a different setup block for each of them."
      MaskPromptString	      "Arduino variable|Name of existing workspace variable|Serial (COM) port"
      MaskStyleString	      "popup(Temporary arduino variable: Arduino1|Temporary arduino variable: Arduino2|Temporary"
      " arduino variable: Arduino3|Temporary arduino variable: Arduino4|Existing workspace arduino variable #1|Existing"
      " workspace arduino variable #2|Existing workspace arduino variable #3|Existing workspace arduino variable #4),ed"
      "it,edit"
      MaskTunableValueString  "off,off,off"
      MaskCallbackString      "AIOSetupBlockMaskEnables = get_param(gcb,'MaskEnables');\nAIOSetupBlockMaskVisibilities"
      " = get_param(gcb,'MaskVisibilities');\nif ~isempty(strfind(get_param(gcb,'arduinoVar'), 'Existing'))\n    AIOSet"
      "upBlockMaskEnables{2} = 'on';AIOSetupBlockMaskVisibilities{2} = 'on';\n    AIOSetupBlockMaskEnables{3} = 'off';A"
      "IOSetupBlockMaskVisibilities{3} = 'off';\nelse\n    AIOSetupBlockMaskEnables{2} = 'off';AIOSetupBlockMaskVisibil"
      "ities{2} = 'off';\n    AIOSetupBlockMaskEnables{3} = 'on';AIOSetupBlockMaskVisibilities{3} = 'on';\nend\nset_par"
      "am(gcb,'MaskEnables',AIOSetupBlockMaskEnables);\nset_param(gcb,'MaskVisibilities',AIOSetupBlockMaskVisibilities)"
      ";\nclear AIOSetupBlockMaskEnables AIOSetupBlockMaskVisibilities||"
      MaskEnableString	      "on,off,on"
      MaskVisibilityString    "on,off,on"
      MaskToolTipString	      "on,on,on"
      MaskVariables	      "arduinoVar=&1;workspaceVarName=&2;comPort=&3;"
      MaskDisplay	      "if ~isempty(strfind(arduinoVar,'Existing')),\n    try\n        ser=serial(evalin('base',works"
      "paceVarName));\n    catch\n        ser='Unknown';\n    end\n    fprintf('Setup\\n%s\\n%s',workspaceVarName, ser)"
      "\nelse\n    fprintf('Setup\\n%s\\n%s',arduinoVar(end-7:end),comPort)\nend\n"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskPortRotate	      "default"
      MaskIconUnits	      "autoscale"
      MaskValueString	      "Temporary arduino variable: Arduino1|a|DEMO"
    }
    Block {
      BlockType		      "M-S-Function"
      Name		      "DC Motor"
      SID		      6
      Ports		      [2]
      Position		      [385, 426, 485, 484]
      FunctionName	      "msfun_arduino_dcmotor"
      Parameters	      "arduinoVar, motorNum, sendOnChange, T"
      MaskType		      "Arduino IO DC Motor"
      MaskDescription	      "Every time this block is executed it sends to the server program running on the Arduino a"
      " command to set direction and speed of a given DC motor.\n\nThe first input is the direction (mode) of the motor"
      " (positive=forward, 0=release, negative=backward), while the second input is the desired speed (0 to 255, for ne"
      "gative numbers only the magnitude is considered).\n\nThe first parameter in the mask is the name of the Arduino "
      "object (which must match the one chosen in the Setup block). The second parameter is the number of the motor (1 "
      "to 4). The third parameter is a checkbox that when checked causes the block to send motor commands only when inp"
      "uts change. The last parameter is the sample time."
      MaskHelp		      "Every time this block is executed it sends to the server program running on the Arduino a comma"
      "nd to set direction and speed of a given DC motor.\n\nThe first input is the direction (mode) of the motor (posi"
      "tive=forward, 0=release, negative=backward), while the second input is the desired speed (0 to 255, for negative"
      " numbers only the magnitude is considered).\n\nThe first parameter in the mask is the name of the Arduino object"
      " (which must match the one chosen in the Setup block). The second parameter is the number of the motor (1 to 4)."
      " The third parameter is a checkbox that when checked casues the block to send motor commands only when inputs ch"
      "ange. The last parameter is the sample time.\n\nSee also arduino.motorRun and arduino.motorSpeed for more detail"
      "s."
      MaskPromptString	      "Arduino Variable|Motor number|Send motor commands only when inputs change |Sample Time ("
      "-1 for inherited)"
      MaskStyleString	      "popup(Temporary arduino variable: Arduino1|Temporary arduino variable: Arduino2|Temporary"
      " arduino variable: Arduino3|Temporary arduino variable: Arduino4|Existing workspace arduino variable #1|Existing"
      " workspace arduino variable #2|Existing workspace arduino variable #3|Existing workspace arduino variable #4),po"
      "pup(1|2|3|4),checkbox,edit"
      MaskTunableValueString  "off,off,off,off"
      MaskCallbackString      "|||"
      MaskEnableString	      "on,on,on,on"
      MaskVisibilityString    "on,on,on,on"
      MaskToolTipString	      "on,on,on,on"
      MaskVariables	      "arduinoVar=&1;motorNum=&2;sendOnChange=@3;T=@4;"
      MaskDisplay	      "port_label('input', 1, 'Dir')\nport_label('input', 2, 'Spd')\nif ~isempty(strfind(arduinoVar,"
      "'Existing')),\n    try\n        SetupBlockName = find_system(bdroot(gcb),'SearchDepth',1, 'MaskType','Arduino IO"
      " Setup','arduinoVar',arduinoVar);\n        str=get_param(SetupBlockName,'workspaceVarName');\n        fprintf('%"
      "s\\nDC Motor (#%s)',str{1},motorNum);\n    catch\n        fprintf('Workspace var #%s\\nDC Motor (#%s)',arduinoVa"
      "r(end),motorNum)\n    end\nelse\n    fprintf('%s\\nDC Motor (#%s)',arduinoVar(end-7:end),motorNum)\nend\n"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskPortRotate	      "default"
      MaskIconUnits	      "normalized"
      MaskValueString	      "Temporary arduino variable: Arduino1|3|on|0.2"
    }
    Block {
      BlockType		      "M-S-Function"
      Name		      "Encoder Read"
      SID		      7
      Ports		      [0, 1]
      Position		      [105, 326, 205, 384]
      FunctionName	      "msfun_arduino_encoderread"
      Parameters	      "arduinoVar, encNum, pinA, pinB, DbDl, T"
      MaskType		      "Arduino IO Encoder Read"
      MaskDescription	      "Every time this block is executed it asks the server program running on the Arduino to re"
      "ad the position of a given encoder, and to return the value in steps (-32768 to 32767) via serial port. This val"
      "ue is then set as the output of the block.\n\nThe first parameter in the mask is the name of the Arduino object "
      "(which must match the one chosen in the Setup block). The second parameter is the number of the encoder (0 to 2)"
      ". The following two parameters are the two pins (A and B) to which the encoder is attached. The fifth parameter "
      "is the debouncing delay in units of approximately 0.1 ms. The last parameter is the sample time."
      MaskHelp		      "Every time this block is executed it asks the server program running on the Arduino to read the"
      " position of a given encoder, and to return the value in steps (-32768 to 32767) via serial port. This value is "
      "then set as the output of the block.\n\nThe first parameter in the mask is the name of the Arduino object (which"
      " must match the one chosen in the Setup block). The second parameter is the number of the encoder (0 to 2). The "
      "following two parameters are the two pins (A and B) to which the encoder is attached. The fifth parameter is the"
      " debouncing delay in units of approximately 0.1 ms (use with caution, and see the help for the arduino.encoderDe"
      "bounce function for more info). The last parameter is the sample time.\n\nAlso see \"doc arduino.encoderAttach\""
      " or \"help arduino.encoderAttach\", and \"doc arduino.encoderRead\" or \"help arduino.encoderRead\" for more det"
      "ails."
      MaskPromptString	      "Arduino Variable|Encoder Number|Pin A|Pin B|Debounce delay|Sample Time (-1 for inherited)"
      MaskStyleString	      "popup(Temporary arduino variable: Arduino1|Temporary arduino variable: Arduino2|Temporary"
      " arduino variable: Arduino3|Temporary arduino variable: Arduino4|Existing workspace arduino variable #1|Existing"
      " workspace arduino variable #2|Existing workspace arduino variable #3|Existing workspace arduino variable #4),po"
      "pup(0|1|2),popup(2|3|21|20|19|18),popup(2|3|21|20|19|18),edit,edit"
      MaskTunableValueString  "off,off,off,off,on,off"
      MaskCallbackString      "AIOEncoderReadBlockMaskEnables = get_param(gcb,'MaskEnables');\nAIOEncoderReadBlockMask"
      "Visibilities = get_param(gcb,'MaskVisibilities');\nAIOEncoderReadBlockMaskEnables{3} = 'on';AIOEncoderReadBlockM"
      "askVisibilities{3} = 'on';\nAIOEncoderReadBlockMaskEnables{4} = 'on';AIOEncoderReadBlockMaskVisibilities{4} = 'o"
      "n';\nif ~isempty(strfind(get_param(gcb,'arduinoVar'), 'Existing')),\n    AIOEncoderReadBlockEncoderNumber=get_pa"
      "ram(gcb,'encNum');\n    AIOEncoderReadBlockArduinoVariable=get_param(gcb,'arduinoVar');\n    AIOEncoderReadBlock"
      "SetupBlockName = find_system(bdroot(gcb),'SearchDepth', 1, 'MaskType', 'Arduino IO Setup', 'arduinoVar', AIOEnco"
      "derReadBlockArduinoVariable);\n    AIOEncoderReadBlockArduinoObjectString=get_param(AIOEncoderReadBlockSetupBloc"
      "kName,'workspaceVarName');\n    if ~isempty(AIOEncoderReadBlockArduinoObjectString),\n       try\n          eval"
      "(['AIOEncoderReadBlockEncoderStatus=encoderStatus(' AIOEncoderReadBlockArduinoObjectString{1} ',' AIOEncoderRead"
      "BlockEncoderNumber ');']);\n       catch\n          AIOEncoderReadBlockEncoderStatus=0;\n       end\n       if A"
      "IOEncoderReadBlockEncoderStatus,\n            AIOEncoderReadBlockMaskEnables{3} = 'off';AIOEncoderReadBlockMaskV"
      "isibilities{3} = 'off';\n            AIOEncoderReadBlockMaskEnables{4} = 'off';AIOEncoderReadBlockMaskVisibiliti"
      "es{4} = 'off';\n       end\n    end\nend\nset_param(gcb,'MaskEnables',AIOEncoderReadBlockMaskEnables);\nset_para"
      "m(gcb,'MaskVisibilities',AIOEncoderReadBlockMaskVisibilities);\nclear AIOEncoderReadBlockMaskEnables AIOEncoderR"
      "eadBlockMaskVisibilities \nclear AIOEncoderReadBlockEncoderNumber AIOEncoderReadBlockArduinoVariable\nclear AIOE"
      "ncoderReadBlockEncoderStatus AIOEncoderReadBlockSetupBlockName AIOEncoderReadBlockArduinoObjectString|AIOEncoder"
      "ReadBlockMaskEnables = get_param(gcb,'MaskEnables');\nAIOEncoderReadBlockMaskVisibilities = get_param(gcb,'MaskV"
      "isibilities');\nAIOEncoderReadBlockMaskEnables{3} = 'on';AIOEncoderReadBlockMaskVisibilities{3} = 'on';\nAIOEnco"
      "derReadBlockMaskEnables{4} = 'on';AIOEncoderReadBlockMaskVisibilities{4} = 'on';\nAIOEncoderReadBlockMaskEnables"
      "{5} = 'on';AIOEncoderReadBlockMaskVisibilities{5} = 'on';\nif ~isempty(strfind(get_param(gcb,'arduinoVar'), 'Exi"
      "sting')),\n    AIOEncoderReadBlockEncoderNumber=get_param(gcb,'encNum');\n    AIOEncoderReadBlockArduinoVariable"
      "=get_param(gcb,'arduinoVar');\n    AIOEncoderReadBlockSetupBlockName = find_system(bdroot(gcb),'SearchDepth', 1,"
      " 'MaskType', 'Arduino IO Setup', 'arduinoVar', AIOEncoderReadBlockArduinoVariable);\n    AIOEncoderReadBlockArdu"
      "inoObjectString=get_param(AIOEncoderReadBlockSetupBlockName,'workspaceVarName');\n    if ~isempty(AIOEncoderRead"
      "BlockArduinoObjectString),\n       try\n          eval(['AIOEncoderReadBlockEncoderStatus=encoderStatus(' AIOEnc"
      "oderReadBlockArduinoObjectString{1} ',' AIOEncoderReadBlockEncoderNumber ');']);\n       catch\n          AIOEnc"
      "oderReadBlockEncoderStatus=0;\n       end\n       if AIOEncoderReadBlockEncoderStatus,\n            AIOEncoderRe"
      "adBlockMaskEnables{3} = 'off';AIOEncoderReadBlockMaskVisibilities{3} = 'off';\n            AIOEncoderReadBlockMa"
      "skEnables{4} = 'off';AIOEncoderReadBlockMaskVisibilities{4} = 'off';\n            AIOEncoderReadBlockMaskEnables"
      "{5} = 'off';AIOEncoderReadBlockMaskVisibilities{5} = 'off';\n       end\n    end\nend\nset_param(gcb,'MaskEnable"
      "s',AIOEncoderReadBlockMaskEnables);\nset_param(gcb,'MaskVisibilities',AIOEncoderReadBlockMaskVisibilities);\ncle"
      "ar AIOEncoderReadBlockMaskEnables AIOEncoderReadBlockMaskVisibilities \nclear AIOEncoderReadBlockEncoderNumber A"
      "IOEncoderReadBlockArduinoVariable\nclear AIOEncoderReadBlockEncoderStatus AIOEncoderReadBlockSetupBlockName AIOE"
      "ncoderReadBlockArduinoObjectString||||"
      MaskEnableString	      "on,on,on,on,on,on"
      MaskVisibilityString    "on,on,on,on,on,on"
      MaskToolTipString	      "on,on,on,on,on,on"
      MaskVariables	      "arduinoVar=&1;encNum=&2;pinA=&3;pinB=&4;DbDl=@5;T=@6;"
      MaskDisplay	      "if ~isempty(strfind(arduinoVar,'Existing')),\n    try\n        SetupBlockName = find_system(b"
      "droot(gcb),'SearchDepth', 1, 'MaskType', 'Arduino IO Setup', 'arduinoVar', arduinoVar);\n        str=get_param(S"
      "etupBlockName,'workspaceVarName');\n        fprintf('%s\\nEncoder Read (#%s)',str{1},encNum);\n    catch\n      "
      "  fprintf('Workspace var #%s\\nEncoder Read (#%s)',arduinoVar(end),encNum)\n    end\nelse\n    fprintf('%s\\nEnc"
      "oder Read (#%s)',arduinoVar(end-7:end),encNum)\nend"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskPortRotate	      "default"
      MaskIconUnits	      "normalized"
      MaskValueString	      "Temporary arduino variable: Arduino1|1|3|2|0|0.2"
    }
    Block {
      BlockType		      "M-S-Function"
      Name		      "Encoder Reset"
      SID		      8
      Ports		      [1]
      Position		      [385, 326, 485, 384]
      FunctionName	      "msfun_arduino_encoderreset"
      Parameters	      "arduinoVar, encNum, T"
      MaskType		      "Arduino IO Encoder Reset"
      MaskDescription	      "Every time this block is executed it checks its input, and if it is greater than 0, then "
      "it asks the server program running on the Arduino to reset the position of a given encoder.\nThe first parameter"
      " in the mask is the name of the Arduino object (which must match the one chosen in the Setup block). The second "
      "parameter is the number of the Encoder (0 to 2) which position needs to be reset. The last parameter is the samp"
      "le time."
      MaskHelp		      "Every time this block is executed it checks its input, and if it is greater than 0, then it ask"
      "s the server program running on the Arduino to reset the position of a given encoder.\nThe first parameter in th"
      "e mask is the name of the Arduino object (which must match the one chosen in the Setup block). The second parame"
      "ter is the number of the Encoder (0 to 2) which position needs to be reset. The last parameter is the sample tim"
      "e.\n\nAlso see \"doc arduino.encoderReset\" or \"help arduino.encoderReset\" for more details."
      MaskPromptString	      "Arduino Variable|Encoder Number|Sample Time (-1 for inherited)"
      MaskStyleString	      "popup(Temporary arduino variable: Arduino1|Temporary arduino variable: Arduino2|Temporary"
      " arduino variable: Arduino3|Temporary arduino variable: Arduino4|Existing workspace arduino variable #1|Existing"
      " workspace arduino variable #2|Existing workspace arduino variable #3|Existing workspace arduino variable #4),po"
      "pup(0|1|2),edit"
      MaskTunableValueString  "off,off,off"
      MaskCallbackString      "||"
      MaskEnableString	      "on,on,on"
      MaskVisibilityString    "on,on,on"
      MaskToolTipString	      "on,on,on"
      MaskVariables	      "arduinoVar=&1;encNum=&2;T=@3;"
      MaskDisplay	      "if ~isempty(strfind(arduinoVar,'Existing')),\n    try\n        SetupBlockName = find_system(b"
      "droot(gcb),'SearchDepth', 1, 'MaskType', 'Arduino IO Setup', 'arduinoVar', arduinoVar);\n        str=get_param(S"
      "etupBlockName,'workspaceVarName');\n        fprintf('%s\\nEncoder Reset (#%s)',str{1},encNum);\n    catch\n     "
      "   fprintf('Workspace var #%s\\nEncoder Reset (#%s)',arduinoVar(end),encNum)\n    end\nelse\n    fprintf('%s\\nE"
      "ncoder Reset (#%s)',arduinoVar(end-7:end),encNum)\nend\n"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskPortRotate	      "default"
      MaskIconUnits	      "normalized"
      MaskValueString	      "Temporary arduino variable: Arduino1|0|0.2"
    }
    Block {
      BlockType		      "M-S-Function"
      Name		      "Real-Time Pacer"
      SID		      19
      Ports		      []
      Position		      [515, 49, 617, 106]
      FunctionName	      "msfun_realtime_pacer"
      Parameters	      "simTimePerRealTime"
      MaskType		      "RealTime_Pacer"
      MaskDescription	      "Slow down a simulation to track real (i.e., wall clock) elapsed time. \n\n\"Speedup\" spe"
      "cifies the ratio between simulation time and real time \n Speedup = N => N sec. of simulation time per sec. of r"
      "eal time\n Speedup can be fractional (e.g., 0.5, 1.3). \n Speedup = inf => allow simulation to run at full speed"
      "\n\nClick on the Help button for details."
      MaskHelp		      "web('realtime_pacer_help.html', '-helpbrowser')"
      MaskPromptString	      "Speedup (Simulation Time / Real Time):"
      MaskStyleString	      "edit"
      MaskTunableValueString  "on"
      MaskEnableString	      "on"
      MaskVisibilityString    "on"
      MaskToolTipString	      "on"
      MaskVariables	      "simTimePerRealTime=@1;"
      MaskDisplay	      "fprintf('Real-Time Pacer\\nSpeedup = %g', simTimePerRealTime)"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskPortRotate	      "default"
      MaskIconUnits	      "normalized"
      MaskValueString	      "1"
    }
    Block {
      BlockType		      SubSystem
      Name		      "Run command file 1"
      SID		      9
      Ports		      []
      Position		      [690, 145, 785, 182]
      DropShadow	      on
      ShowName		      off
      OpenFcn		      "blink_challenge_sf"
      MinAlgLoopOccurrences   off
      PropExecContextOutsideSubsystem off
      RTWSystemCode	      "Auto"
      FunctionWithSeparateData off
      Opaque		      off
      RequestExecContextInheritance off
      MaskHideContents	      off
      MaskDisplay	      "disp('Stateflow \\nBlink Challenge')"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskPortRotate	      "default"
      MaskIconUnits	      "autoscale"
      System {
	Name			"Run command file 1"
	Location		[16, 158, 236, 601]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
	TiledPageScale		1
	ShowPageBoundaries	off
	ZoomFactor		"100"
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "Run command file 2"
      SID		      10
      Ports		      []
      Position		      [690, 95, 785, 132]
      DropShadow	      on
      ShowName		      off
      OpenFcn		      "blink_challenge_sim"
      MinAlgLoopOccurrences   off
      PropExecContextOutsideSubsystem off
      RTWSystemCode	      "Auto"
      FunctionWithSeparateData off
      Opaque		      off
      RequestExecContextInheritance off
      MaskHideContents	      off
      MaskDisplay	      "disp('Simulink \\nBlink Challenge')"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskPortRotate	      "default"
      MaskIconUnits	      "autoscale"
      System {
	Name			"Run command file 2"
	Location		[16, 158, 236, 601]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
	TiledPageScale		1
	ShowPageBoundaries	off
	ZoomFactor		"100"
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "Run command file 3"
      SID		      11
      Ports		      []
      Position		      [690, 235, 785, 272]
      DropShadow	      on
      ShowName		      off
      OpenFcn		      "servo_sim"
      MinAlgLoopOccurrences   off
      PropExecContextOutsideSubsystem off
      RTWSystemCode	      "Auto"
      FunctionWithSeparateData off
      Opaque		      off
      RequestExecContextInheritance off
      MaskHideContents	      off
      MaskDisplay	      "disp('Servo\\n Read & Write')"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskPortRotate	      "default"
      MaskIconUnits	      "autoscale"
      System {
	Name			"Run command file 3"
	Location		[16, 158, 236, 601]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
	TiledPageScale		1
	ShowPageBoundaries	off
	ZoomFactor		"100"
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "Run command file 4"
      SID		      12
      Ports		      []
      Position		      [690, 425, 785, 462]
      DropShadow	      on
      ShowName		      off
      OpenFcn		      "motor_sim"
      MinAlgLoopOccurrences   off
      PropExecContextOutsideSubsystem off
      RTWSystemCode	      "Auto"
      FunctionWithSeparateData off
      Opaque		      off
      RequestExecContextInheritance off
      MaskHideContents	      off
      MaskDisplay	      "disp('DC Motor\\n Example')"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskPortRotate	      "default"
      MaskIconUnits	      "autoscale"
      System {
	Name			"Run command file 4"
	Location		[16, 158, 236, 601]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
	TiledPageScale		1
	ShowPageBoundaries	off
	ZoomFactor		"100"
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "Run command file 5"
      SID		      13
      Ports		      []
      Position		      [690, 475, 785, 512]
      DropShadow	      on
      ShowName		      off
      OpenFcn		      "stepper_sim"
      MinAlgLoopOccurrences   off
      PropExecContextOutsideSubsystem off
      RTWSystemCode	      "Auto"
      FunctionWithSeparateData off
      Opaque		      off
      RequestExecContextInheritance off
      MaskHideContents	      off
      MaskDisplay	      "disp('Stepper Motor\\n Example')"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskPortRotate	      "default"
      MaskIconUnits	      "autoscale"
      System {
	Name			"Run command file 5"
	Location		[16, 158, 236, 601]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
	TiledPageScale		1
	ShowPageBoundaries	off
	ZoomFactor		"100"
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "Run command file 6"
      SID		      14
      Ports		      []
      Position		      [690, 45, 785, 82]
      DropShadow	      on
      ShowName		      off
      OpenFcn		      "blink_led_sim"
      MinAlgLoopOccurrences   off
      PropExecContextOutsideSubsystem off
      RTWSystemCode	      "Auto"
      FunctionWithSeparateData off
      Opaque		      off
      RequestExecContextInheritance off
      MaskHideContents	      off
      MaskDisplay	      "disp('Pin 13\\n Blink Led')"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskPortRotate	      "default"
      MaskIconUnits	      "autoscale"
      System {
	Name			"Run command file 6"
	Location		[16, 158, 236, 601]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
	TiledPageScale		1
	ShowPageBoundaries	off
	ZoomFactor		"100"
      }
    }
    Block {
      BlockType		      SubSystem
      Name		      "Run command file 7"
      SID		      15
      Ports		      []
      Position		      [690, 325, 785, 362]
      DropShadow	      on
      ShowName		      off
      OpenFcn		      "encoder_sim"
      MinAlgLoopOccurrences   off
      PropExecContextOutsideSubsystem off
      RTWSystemCode	      "Auto"
      FunctionWithSeparateData off
      Opaque		      off
      RequestExecContextInheritance off
      MaskHideContents	      off
      MaskDisplay	      "disp('Encoder\\n Read & Reset')"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskPortRotate	      "default"
      MaskIconUnits	      "autoscale"
      System {
	Name			"Run command file 7"
	Location		[16, 158, 236, 601]
	Open			off
	ModelBrowserVisibility	off
	ModelBrowserWidth	200
	ScreenColor		"white"
	PaperOrientation	"landscape"
	PaperPositionMode	"auto"
	PaperType		"usletter"
	PaperUnits		"inches"
	TiledPaperMargins	[0.500000, 0.500000, 0.500000, 0.500000]
	TiledPageScale		1
	ShowPageBoundaries	off
	ZoomFactor		"100"
      }
    }
    Block {
      BlockType		      "M-S-Function"
      Name		      "Servo Read"
      SID		      16
      Ports		      [0, 1]
      Position		      [105, 236, 205, 294]
      FunctionName	      "msfun_arduino_servoread"
      Parameters	      "arduinoVar, pinNum, T"
      MaskType		      "Arduino IO Servo Read"
      MaskDescription	      "Every time this block is executed it asks the server program running on the Arduino to re"
      "ad the angle of a given servo, and to return the value in degrees (0 to 180) via serial port. This value is then"
      " set as the output of the block.\n\nThe first parameter in the mask is the name of the Arduino object (which mus"
      "t match the one chosen in the Setup block). The second parameter is the number of the (PWM) pin to which the ser"
      "vo is attached. The last parameter is the sample time."
      MaskHelp		      "Every time this block is executed it asks the server program running on the Arduino to read the"
      " angle of a given servo, and to return the value in degrees (0 to 180) via serial port. This value is then set a"
      "s the output of the block.\n\nThe first parameter in the mask is the name of the Arduino object (which must matc"
      "h the one chosen in the Setup block). The second parameter is the number of the (PWM) pin to which the servo is "
      "attached. The last parameter is the sample time.\n\nAlso see \"doc arduino.servoRead\" or \"help arduino.servoRe"
      "ad\" for more details."
      MaskPromptString	      "Arduino Variable|Pin #|Sample Time (-1 for inherited)"
      MaskStyleString	      "popup(Temporary arduino variable: Arduino1|Temporary arduino variable: Arduino2|Temporary"
      " arduino variable: Arduino3|Temporary arduino variable: Arduino4|Existing workspace arduino variable #1|Existing"
      " workspace arduino variable #2|Existing workspace arduino variable #3|Existing workspace arduino variable #4),ed"
      "it,edit"
      MaskTunableValueString  "off,off,off"
      MaskCallbackString      "||"
      MaskEnableString	      "on,on,on"
      MaskVisibilityString    "on,on,on"
      MaskToolTipString	      "on,on,on"
      MaskVariables	      "arduinoVar=&1;pinNum=@2;T=@3;"
      MaskDisplay	      "if ~isempty(strfind(arduinoVar,'Existing')),\n    try\n        SetupBlockName = find_system(b"
      "droot(gcb),'SearchDepth', 1, 'MaskType', 'Arduino IO Setup', 'arduinoVar', arduinoVar);\n        str=get_param(S"
      "etupBlockName,'workspaceVarName');\n        fprintf('%s\\nServo Read (#%s)',str{1},int2str(pinNum));\n    catch\n"
      "        fprintf('Workspace var #%s\\nServo Read (#%s)',arduinoVar(end),int2str(pinNum))\n    end\nelse\n    fpri"
      "ntf('%s\\nServo Read (#%s)',arduinoVar(end-7:end),int2str(pinNum))\nend\n"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskPortRotate	      "default"
      MaskIconUnits	      "normalized"
      MaskValueString	      "Temporary arduino variable: Arduino1|9|0.2"
    }
    Block {
      BlockType		      "M-S-Function"
      Name		      "Servo Write"
      SID		      17
      Ports		      [1]
      Position		      [385, 236, 485, 294]
      FunctionName	      "msfun_arduino_servowrite"
      Parameters	      "arduinoVar, pinNum, T"
      MaskType		      "Arduino IO servo Write"
      MaskDescription	      "Every time this block is executed it gets the value (0 to 180) at its input and sends to "
      "the server program running on the Arduino a command to set that value as the angle of a given servo.\n\nThe firs"
      "t parameter in the mask is the name of the Arduino object (which must match the one chosen in the Setup block). "
      "The second parameter is the number of the (PWM) pin to which the servo is attached. The last parameter is the sa"
      "mple time."
      MaskHelp		      "Every time this block is executed it gets the value (0 to 180) at its input and sends to the se"
      "rver program running on the Arduino a command to set that value as the angle of a given servo.\n\nThe first para"
      "meter in the mask is the name of the Arduino object (which must match the one chosen in the Setup block). The se"
      "cond parameter is the number of the (PWM) pin to which the servo is attached. The last parameter is the sample t"
      "ime.\n\nAlso see \"doc arduino.servoWrite\" or \"help arduino.servoWrite\" for more details."
      MaskPromptString	      "Arduino Variable|Pin #|Sample Time (-1 for inherited)"
      MaskStyleString	      "popup(Temporary arduino variable: Arduino1|Temporary arduino variable: Arduino2|Temporary"
      " arduino variable: Arduino3|Temporary arduino variable: Arduino4|Existing workspace arduino variable #1|Existing"
      " workspace arduino variable #2|Existing workspace arduino variable #3|Existing workspace arduino variable #4),ed"
      "it,edit"
      MaskTunableValueString  "off,off,off"
      MaskCallbackString      "||"
      MaskEnableString	      "on,on,on"
      MaskVisibilityString    "on,on,on"
      MaskToolTipString	      "on,on,on"
      MaskVariables	      "arduinoVar=&1;pinNum=@2;T=@3;"
      MaskDisplay	      "if ~isempty(strfind(arduinoVar,'Existing')),\n    try\n        SetupBlockName = find_system(b"
      "droot(gcb),'SearchDepth', 1, 'MaskType', 'Arduino IO Setup', 'arduinoVar', arduinoVar);\n        str=get_param(S"
      "etupBlockName,'workspaceVarName');\n        fprintf('%s\\nServo Write (#%s)',str{1},int2str(pinNum));\n    catch"
      "\n        fprintf('Workspace var #%s\\nServo Write (#%s)',arduinoVar(end),int2str(pinNum))\n    end\nelse\n    f"
      "printf('%s\\nServo Write (#%s)',arduinoVar(end-7:end),int2str(pinNum))\nend\n"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskPortRotate	      "default"
      MaskIconUnits	      "normalized"
      MaskValueString	      "Temporary arduino variable: Arduino1|9|0.2"
    }
    Block {
      BlockType		      "M-S-Function"
      Name		      "Stepper Motor"
      SID		      18
      Ports		      [3]
      Position		      [515, 426, 615, 484]
      FunctionName	      "msfun_arduino_stepper"
      Parameters	      "arduinoVar, motorNum, motionStyle, sendOnChange, T"
      MaskType		      "Arduino IO Stepper Motor"
      MaskDescription	      "Every time this block is executed it sends to the server program running on the Arduino a"
      " command to advance a given stepper motor by a given number of steps.\n\nThe first input is the direction (mode)"
      " of the motor (positive=forward, 0=release, negative=backward), while the second input is the desired speed (0 t"
      "o 255, for negative numbers only the magnitude is considered), and the third is the number of desired steps (0 t"
      "o 255) the stepper advances every time the block executes.\n\nThe first parameter in the mask is the name of the"
      " Arduino object (which must match the one chosen in the Setup block). The second parameter is the number of the "
      "stepper motor (1 or 2). The third parameter is the motion style (single,double,interleave,microstep). The fourth"
      " parameter is a checkbox that when checked casues the block to send speed commands only when the velocity input "
      "changes. The last parameter is the sample time."
      MaskHelp		      "Every time this block is executed it sends to the server program running on the Arduino a comma"
      "nd to advance a given stepper motor by a given number of steps.\n\nThe first input is the direction (mode) of th"
      "e motor (positive=forward, 0=release, negative=backward), while the second input is the desired speed (0 to 255,"
      " for negative numbers only the magnitude is considered), and the third is the number of desired steps (0 to 255)"
      " the stepper advances every time the block executes.\n\nThe first parameter in the mask is the name of the Ardui"
      "no object (which must match the one chosen in the Setup block). The second parameter is the number of the steppe"
      "r motor (1 or 2). The third parameter is the motion style (single,double,interleave,microstep). The fourth param"
      "eter is a checkbox that when checked casues the block to send speed commands only when the velocity input change"
      "s. The last parameter is the sample time.\n\nSee also arduino.stepperSpeed and arduino.stepperStep for more deta"
      "ils."
      MaskPromptString	      "Arduino Variable|Stepper Motor number|Motion Style|Send speed commands only when velocit"
      "y input changes|Sample Time (-1 for inherited)"
      MaskStyleString	      "popup(Temporary arduino variable: Arduino1|Temporary arduino variable: Arduino2|Temporary"
      " arduino variable: Arduino3|Temporary arduino variable: Arduino4|Existing workspace arduino variable #1|Existing"
      " workspace arduino variable #2|Existing workspace arduino variable #3|Existing workspace arduino variable #4),po"
      "pup(1|2),popup(single    |double    |interleave|microstep ),checkbox,edit"
      MaskTunableValueString  "off,off,on,off,off"
      MaskCallbackString      "||||"
      MaskEnableString	      "on,on,on,on,on"
      MaskVisibilityString    "on,on,on,on,on"
      MaskToolTipString	      "on,on,on,on,on"
      MaskVariables	      "arduinoVar=&1;motorNum=&2;motionStyle=&3;sendOnChange=@4;T=@5;"
      MaskDisplay	      "port_label('input', 1, 'Dir')\nport_label('input', 2, 'Spd')\nport_label('input', 3, 'Stp')\n"
      "if ~isempty(strfind(arduinoVar,'Existing')),\n    try\n        SetupBlockName = find_system(bdroot(gcb),'SearchD"
      "epth', 1, 'MaskType','Arduino IO Setup', 'arduinoVar',arduinoVar);\n        str=get_param(SetupBlockName,'worksp"
      "aceVarName');\n        fprintf('%s\\nStepper\\n Motor (#%s)',str{1},motorNum);\n    catch\n        fprintf('Work"
      "space var #%s\\nStepper\\n Motor (#%s)',arduinoVar(end),motorNum)\n    end\nelse\n    fprintf('%s\\nStepper\\n M"
      "otor (#%s)',arduinoVar(end-7:end),motorNum)\nend\n"
      MaskIconFrame	      on
      MaskIconOpaque	      on
      MaskIconRotate	      "none"
      MaskPortRotate	      "default"
      MaskIconUnits	      "normalized"
      MaskValueString	      "Temporary arduino variable: Arduino1|1|single    |on|0.2"
    }
    Annotation {
      Name		      "SETUP\nBLOCK"
      Position		      [18, 63]
      HorizontalAlignment     "left"
    }
    Annotation {
      Name		      "Simulink Library For the Arduino IO Package"
      Position		      [208, 14]
      Interpreter	      "tex"
      FontName		      "@Arial Unicode MS"
      FontSize		      20
    }
    Annotation {
      Name		      "ANALOG IO\nAND \nDIGITAL IO\nBLOCKS"
      Position		      [18, 168]
      HorizontalAlignment     "left"
    }
    Annotation {
      Name		      "SERVO\nBLOCKS"
      Position		      [18, 248]
      HorizontalAlignment     "left"
    }
    Annotation {
      Name		      "MOTOR \nSHIELD:\n\nMOTOR\nBLOCKS"
      Position		      [18, 453]
      HorizontalAlignment     "left"
    }
    Annotation {
      Name		      "NOTE: These blocks do not support code generation. For generating code that will run autonomously o"
      "n the Arduino, use \nthe Simulink Support Package for Arduino, http://www.mathworks.com/academia/arduino-softwar"
      "e/arduino-simulink.html.           Copyright 2010, The MathWorks, Inc. "
      Position		      [22, 527]
      HorizontalAlignment     "left"
    }
    Annotation {
      Name		      "REALTIME\nPACER\nBLOCK"
      Position		      [388, 68]
      HorizontalAlignment     "left"
    }
    Annotation {
      Name		      "Examples"
      Position		      [733, 14]
      Interpreter	      "tex"
      FontName		      "@Arial Unicode MS"
      FontSize		      20
    }
    Annotation {
      Name		      "ENCODER\nBLOCKS"
      Position		      [18, 338]
      HorizontalAlignment     "left"
    }
  }
}
